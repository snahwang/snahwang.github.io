{"pages":[],"posts":[{"title":"google spreadsheet query검색 파이썬으로 구현하기","text":"파이썬으로 구글 스프레드시트 조회 #1구글 스프레드시트의 특정한 값을 조회해야하는 일이 생겼다.구글에서 제공하는 OpenAPI가 많지만,API key 생성 없이 url 호출만으로 특정한 값을 뽑아내는 함수를 구현하고자 했다. 검색해보니 query를 이용하여 마치 데이터베이스처럼 스프레드시트를 사용할 수 있는 기능이 있었다.(구글공식: https://developers.google.com/chart/interactive/docs/querylanguage) 이걸 활용해서 어딘가의 서비스에서 문서를 조회 하려면,구글스프레드시트의 공개 설정이 아래와 같이 되어있어야한다. 웹에 공개 링크가 있는 인터넷상의 모든 사용자가 열 수 있음 구글 시트는 보통 아래같은 url 로 접근할 수 있다.(예시문서)https://docs.google.com/spreadsheets/d/19DUH2vK5a196ismKDy4Y6u6u7gVMYOE-ExzAF0Caztg/edit#gid=1386834576 여기서,https://docs.google.com/spreadsheets/d/19DUH2vK5a196ismKDy4Y6u6u7gVMYOE-ExzAF0Caztg/는 스프레드시트의 url 이다. spreadsheet의 url 뒤에 /gviz/tq?tq=쿼리스트링 을 붙이면 쿼리로 검색한 것만 조회할 수 있는데쿼리스트링은 url 인코딩 된 형태여야한다. 만약 예시로 든 스프레드시트에서 할일 목록 중 완료한걸 뽑고 싶다면,“select B where A=true” 라는 쿼리로 조회할 수 있고, url 호출할 땐 아래처럼 하면 된다.“https://docs.google.com/spreadsheets/d/19DUH2vK5a196ismKDy4Y6u6u7gVMYOE-ExzAF0Caztg/gviz/tq?tq=select+B+where+A%3Dtrue&quot; 나는 최종적으로 할일 목록 중, 날짜가 오늘보다 작거나 같은데 완료하지 못한 일들의 목록을 추출했다. 파이썬으로 구현한 내용은 다음 포스트에 작성하겠다.","link":"/2020/12/14/google-spreadsheet-query%EA%B2%80%EC%83%89-%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9C%BC%EB%A1%9C-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0/"},{"title":"오늘만들다","text":"블로그를 만들다분명 예전에 내가 만든 시스템인데 대체 어떻게 만들었더라? 싶은 것들도 많고 잘 정리해뒀어도 퇴사하면서 PC를 포맷하면 나에게 남는 게 없으니 따로 정리할 필요성을 느끼고 있었지만.. 미루고 미루다가 이제서야 블로그를 만들었다 이걸 시작으로 하나씩 공부한 것들도 정리하고, 업무 진행한 것들도 (나름 보안은 준수하면서) 정리해야겠다. 이왕만든 거 잘 써봐야지","link":"/2020/11/29/%EC%98%A4%EB%8A%98%EB%A7%8C%EB%93%A4%EB%8B%A4/"}],"tags":[{"name":"python","slug":"python","link":"/tags/python/"},{"name":"google spreadsheet","slug":"google-spreadsheet","link":"/tags/google-spreadsheet/"}],"categories":[]}